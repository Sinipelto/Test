# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

# https://docs.github.com/en/actions/use-cases-and-examples/publishing-packages/publishing-java-packages-with-gradle
# https://github.com/actions/upload-artifact

# About setting up gradle
# https://github.com/gradle/actions/blob/main/setup-gradle/README.md

name: Test CI Pipeline for Build and Release and Deploy

on:
  push:
    paths-ignore:
      - '**/*.md'
      - '**/*.txt'
      - 'version'
      - 'version.sh'
      - '.gitlab-ci.yml'
    branches:
      - master
      - release

env:
  # VERSION FROM FILE
  APP_NAME: 'test-app'
  BUILD_DIR: 'client/build/libs'
  ENVIRONMENT: 'Production'

jobs:
  build:
    runs-on: ubuntu-latest
    container: eclipse-temurin:8u422-b05-jdk

    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: 'gradle'
          cache-dependency-path: |
            **/*.gradle*
            **/gradle-wrapper.properties

      - uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

      - run: ./gradlew build --no-daemon

  test:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    needs:
      - build
    
    steps:
      - uses: actions/checkout@v4

      - uses: AppThreat/sast-scan-action@1.0.2
        with:
          type: java,bash,json,credscan,depscan

      - uses: actions/setup-java@v4
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: 'gradle'
          cache-dependency-path: |
            **/*.gradle*
            **/gradle-wrapper.properties

      - uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

      - run: ./gradlew test --no-daemon

  release:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write

    needs:
      - build
      - test

    steps:
      - uses: actions/checkout@v4

      - run: |
          git config user.name "DevOps User"
          git config user.email "devops@company.com"

      - run: |
          chmod +x version.sh
          ver=$(cat version)
          ver2=$(./version.sh $ver)
          echo "VERSION_OLD=$ver" >> $GITHUB_ENV
          echo "VERSION=$ver2" >> $GITHUB_ENV

      - uses: actions/setup-java@v4
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: 'gradle'
          cache-dependency-path: |
            **/*.gradle*
            **/gradle-wrapper.properties

      - uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

      - run: |
          ./gradlew jar --no-daemon
          mv -v ${{ env.BUILD_DIR}}/*.jar ${{ env.APP_NAME }}_${{ env.VERSION }}.jar

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          title: "Automatic Release ${{ env.VERSION }}"
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: ${{ env.VERSION }}
          draft: false
          prerelease: false
          files: |
            version
            Readme.txt
            ${{ env.APP_NAME }}_${{ env.VERSION }}.jar

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}_${{ env.VERSION }}
          if-no-files-found: error
          retention-days: 7
          compression-level: 0
          overwrite: true
          include-hidden-files: false
          path: |
            version
            Readme.txt
            ${{ env.APP_NAME }}_${{ env.VERSION }}.jar

      - run: |
          echo ${{ env.VERSION }} > version
          git add version
          git commit -m "[skip-ci] Automatic Bump Version from ${{ env.VERSION_OLD }} to ${{ env.VERSION }}."
          git push

  deploy:
    runs-on: ubuntu-latest

    permissions:
     contents: read
     deployments: write

    needs:
      - build
      - test
      - release

    # Publish to production environment
    # TODO: how to parameterize this? cannot acccess env.* only vars.*
    environment:
      name: Production
      url: ${{ github.repositoryUrl }}

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - run: |
          ver=$(cat version)
          echo "VERSION=$ver" >> $GITHUB_ENV

      - uses: actions/download-artifact@v4
        with:
          name: ${{ env.APP_NAME }}_${{ env.VERSION }}

      - uses: actions/setup-java@v4
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: 'gradle'
          cache-dependency-path: |
            **/*.gradle*
            **/gradle-wrapper.properties

      - uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

      - run: ./gradlew publish --no-daemon
