# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

# https://docs.github.com/en/actions/use-cases-and-examples/publishing-packages/publishing-java-packages-with-gradle
# https://github.com/actions/upload-artifact

name: Test CICD Pipeline

on:
  push:
    branches:
      - master
      - release
#  release:
#    types: [created]
env:
  APP_NAME: 'test-app'
  BUILD_DIR: 'client/build/libs'
  ARTIFACT_DIR: 'artifacts'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          cache: 'gradle'
          java-version: '11'
          distribution: 'temurin'
          cache-dependency-path: |
            **/*.gradle*
            **/gradle-wrapper.properties

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

      - name: Build with Gradle
        run: ./gradlew build
    
  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: 'gradle'
          cache-dependency-path: |
            **/*.gradle*
            **/gradle-wrapper.properties

      - name: Collect version
        run: |
          ls -la
          VERSION=$(cat version)
          echo 1: $VERSION 2: ${VERSION}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

      - name: Create Release jars
        run: |
          ./gradlew jar
          mv -v ${BUILD_DIR}/*.jar ${APP_NAME}-${VERSION}.jar

      - name: "Create release in GitHub"
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          title: "Automatic Release ${VERSION}"
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "${VERSION}"
          draft: false
          prerelease: false
          files: |
            version
            Readme.txt
            ${APP_NAME}-${VERSION}.jar

      - name: Upload Release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${APP_NAME}-${VERSION}
          if-no-files-found: error
          retention-days: 7
          compression-level: 0
          overwrite: true
          include-hidden-files: false
          path: |
            version
            Readme.txt
            ${APP_NAME}-${VERSION}.jar

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build
      - release

    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - uses: actions/checkout@v4

      # - name: Collect version
      #   run: |
      #     ls -la
      #     VERSION=$(cat version)
      #     echo 1: $VERSION 2: ${VERSION}

      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: ${APP_NAME}-${VERSION}

      - uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: 'gradle'
          cache-dependency-path: |
            **/*.gradle*
            **/gradle-wrapper.properties

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
    
      - name: Deploy release to Maven and GitHub repositories
        run: ./gradlew publish
        env: 
          # MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          # MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Deploy to Azure Web App
      #   id: deploy-to-webapp
      #   uses: azure/webapps-deploy@85270a1854658d167ab239bce43949edb336fa7c
      #   with:
      #     app-name: ${{ env.AZURE_WEBAPP_NAME }}
      #     publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
      #     package: '*.jar'
